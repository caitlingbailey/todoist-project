{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caitlin\\\\Documents\\\\GitHub\\\\todoist-project\\\\src\\\\components\\\\Projects.js\";\nimport React, { useState } from 'react';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject';\nexport const Projects = ({\n  activeValue = null\n}) => {\n  const [active, setActive] = useState(activeValue);\n  const {\n    setSelectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  return projects && projects.map(project => /*#__PURE__*/React.createElement(\"li\", {\n    key: project.projectid,\n    \"data-testid\": \"project-action-parent\",\n    \"data-doc-id\": project.docid,\n    className: active === project.projectid ? 'active sidebar__project' : 'sidebar__project',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setActive(project.projectid);\n      setSelectedProject(project.projectid);\n    },\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        setActive(project.projectid);\n        setSelectedProject(project.projectid);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IndividualProject, {\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }))));\n};","map":{"version":3,"sources":["C:/Users/Caitlin/Documents/GitHub/todoist-project/src/components/Projects.js"],"names":["React","useState","useSelectedProjectValue","useProjectsValue","IndividualProject","Projects","activeValue","active","setActive","setSelectedProject","projects","map","project","projectid","docid","e","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,YAA1D;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG;AAAhB,CAAD,KAA2B;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACK,WAAD,CAApC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAyBP,uBAAuB,EAAtD;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAaP,gBAAgB,EAAnC;AAEA,SACIO,QAAQ,IACRA,QAAQ,CAACC,GAAT,CAAaC,OAAO,iBAClB;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,SADf;AAEE,mBAAY,uBAFd;AAGE,mBAAaD,OAAO,CAACE,KAHvB;AAIE,IAAA,SAAS,EACPP,MAAM,KAAKK,OAAO,CAACC,SAAnB,GACI,yBADJ,GAEI,kBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,SAAS,CAACI,OAAO,CAACC,SAAT,CAAT;AACAJ,MAAAA,kBAAkB,CAACG,OAAO,CAACC,SAAT,CAAlB;AACD,KALH;AAME,IAAA,SAAS,EAAGE,CAAD,IAAO;AAChB,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBR,QAAAA,SAAS,CAACI,OAAO,CAACC,SAAT,CAAT;AACAJ,QAAAA,kBAAkB,CAACG,OAAO,CAACC,SAAT,CAAlB;AACD;AACF,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAED,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAVJ,CADF,CAFJ;AA+BH,CApCM","sourcesContent":["import React, {useState} from 'react';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\nimport { IndividualProject } from './IndividualProject';\r\n\r\n\r\nexport const Projects = ({ activeValue = null}) => {\r\n    const [active, setActive] = useState(activeValue);\r\n    const { setSelectedProject } = useSelectedProjectValue();\r\n    const {projects} = useProjectsValue();\r\n\r\n    return (\r\n        projects &&\r\n        projects.map(project => (\r\n          <li\r\n            key={project.projectid}\r\n            data-testid=\"project-action-parent\"\r\n            data-doc-id={project.docid}\r\n            className={\r\n              active === project.projectid\r\n                ? 'active sidebar__project'\r\n                : 'sidebar__project'\r\n            }\r\n          >\r\n              <button\r\n                type=\"button\" \r\n                onClick={() => {\r\n                  setActive(project.projectid);\r\n                  setSelectedProject(project.projectid);\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    setActive(project.projectid);\r\n                    setSelectedProject(project.projectid);\r\n                  }\r\n                }}\r\n                >\r\n                <IndividualProject project={project} />\r\n              </button>\r\n          </li>\r\n        ))\r\n      );\r\n};"]},"metadata":{},"sourceType":"module"}