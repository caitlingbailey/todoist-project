{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caitlin\\\\Documents\\\\GitHub\\\\todoist-project\\\\src\\\\context\\\\projects-context.js\";\nimport React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useProjects } from '../hooks';\nexport const ProjectsContext = createContext();\nexport const ProjectsProvider = ({\n  children\n}) => {\n  const {\n    projects,\n    setProjects\n  } = useProjects();\n  return /*#__PURE__*/React.createElement(ProjectsContext.Provider, {\n    value: {\n      projects,\n      setProjects\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useProjectsValue = () => useContext(ProjectsContext);\nProjectsProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};","map":{"version":3,"sources":["C:/Users/Caitlin/Documents/GitHub/todoist-project/src/context/projects-context.js"],"names":["React","createContext","useContext","PropTypes","useProjects","ProjectsContext","ProjectsProvider","children","projects","setProjects","useProjectsValue","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,OAAO,MAAMC,eAAe,GAAGJ,aAAa,EAArC;AACP,OAAO,MAAMK,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BL,WAAW,EAA7C;AAEA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD,CARM;AAUP,OAAO,MAAMG,gBAAgB,GAAG,MAAMR,UAAU,CAACG,eAAD,CAAzC;AAEPC,gBAAgB,CAACK,SAAjB,GAA6B;AAC3BJ,EAAAA,QAAQ,EAAEJ,SAAS,CAACS,IAAV,CAAeC;AADE,CAA7B","sourcesContent":["import React, { createContext, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjects } from '../hooks';\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsProvider = ({ children }) => {\r\n  const { projects, setProjects } = useProjects();\r\n\r\n  return (\r\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\r\n      {children}\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProjectsValue = () => useContext(ProjectsContext);\r\n\r\nProjectsProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}