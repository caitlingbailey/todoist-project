{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caitlin\\\\Documents\\\\GitHub\\\\todoist-project\\\\src\\\\components\\\\TaskDate.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nexport const TaskDate = ({\n  setTaskDate,\n  showTaskDate,\n  setShowTaskDate\n}) => showTaskDate && /*#__PURE__*/React.createElement(\"div\", {\n  className: \"task-date\",\n  \"data-testid\": \"task-date-overlay\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"ul\", {\n  className: \"task-date__list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  onClick: () => {\n    setShowTaskDate(false);\n    setTaskDate(moment().format('DD/MM/YYYY'));\n  },\n  onKeyDown: () => {\n    setShowTaskDate(false);\n    setTaskDate(moment().format('DD/MM/YYYY'));\n  },\n  \"data-testid\": \"task-date-today\",\n  tabIndex: 0,\n  \"aria-label\": \"Select today as the task date\",\n  role: \"button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(FaSpaceShuttle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 15\n  }\n})), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }\n}, \"Today\"))), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  onClick: () => {\n    setShowTaskDate(false);\n    setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n  },\n  onKeyDown: () => {\n    setShowTaskDate(false);\n    setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\n  },\n  \"data-testid\": \"task-date-tomorrow\",\n  role: \"button\",\n  tabIndex: 0,\n  \"aria-label\": \"Select tomorrow as the task date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(FaSun, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 15\n  }\n})), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }\n}, \"Tomorrow\"))), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  onClick: () => {\n    setShowTaskDate(false);\n    setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n  },\n  onKeyDown: () => {\n    setShowTaskDate(false);\n    setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\n  },\n  \"data-testid\": \"task-date-next-week\",\n  \"aria-label\": \"Select next week as the task date\",\n  tabIndex: 0,\n  role: \"button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(FaRegPaperPlane, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 15\n  }\n})), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }\n}, \"Next week\")))));\nTaskDate.propTypes = {\n  setTaskDate: PropTypes.func.isRequired,\n  showTaskDate: PropTypes.bool.isRequired,\n  setShowTaskDate: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/Caitlin/Documents/GitHub/todoist-project/src/components/TaskDate.js"],"names":["React","moment","FaSpaceShuttle","FaSun","FaRegPaperPlane","PropTypes","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","format","add","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\r\n  showTaskDate && (\r\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\r\n      <ul className=\"task-date__list\">\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().format('DD/MM/YYYY'));\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().format('DD/MM/YYYY'));\r\n            }}\r\n            data-testid=\"task-date-today\"\r\n            tabIndex={0}\r\n            aria-label=\"Select today as the task date\"\r\n            role=\"button\"\r\n          >\r\n            <span>\r\n              <FaSpaceShuttle />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(\r\n                moment()\r\n                  .add(1, 'day')\r\n                  .format('DD/MM/YYYY')\r\n              );\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(\r\n                moment()\r\n                  .add(1, 'day')\r\n                  .format('DD/MM/YYYY')\r\n              );\r\n            }}\r\n            data-testid=\"task-date-tomorrow\"\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            aria-label=\"Select tomorrow as the task date\"\r\n          >\r\n            <span>\r\n              <FaSun />\r\n            </span>\r\n            <span>Tomorrow</span>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(\r\n                moment()\r\n                  .add(7, 'days')\r\n                  .format('DD/MM/YYYY')\r\n              );\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(\r\n                moment()\r\n                  .add(7, 'days')\r\n                  .format('DD/MM/YYYY')\r\n              );\r\n            }}\r\n            data-testid=\"task-date-next-week\"\r\n            aria-label=\"Select next week as the task date\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <span>\r\n              <FaRegPaperPlane />\r\n            </span>\r\n            <span>Next week</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  TaskDate.propTypes = {\r\n    setTaskDate: PropTypes.func.isRequired,\r\n    showTaskDate: PropTypes.bool.isRequired,\r\n    setShowTaskDate: PropTypes.func.isRequired,\r\n  };"]},"metadata":{},"sourceType":"module"}