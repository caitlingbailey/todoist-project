{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caitlin\\\\Documents\\\\GitHub\\\\todoist-project\\\\src\\\\context\\\\selected-project-context.js\";\nimport React, { createContext, useContext, useState } from 'react';\nimport { useProjects } from '../hooks';\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({\n  children\n}) => {\n  const {\n    selectedProject,\n    setSelectedProject\n  } = useState('INBOX');\n  return /*#__PURE__*/React.createElement(ProjectsContext.Provider, {\n    value: {\n      projects,\n      setProjects\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport const useProjectsValue = () => useContext(ProjectsContext);","map":{"version":3,"sources":["C:/Users/Caitlin/Documents/GitHub/todoist-project/src/context/selected-project-context.js"],"names":["React","createContext","useContext","useState","useProjects","SelectedProjectContext","SelectedProjectProvider","children","selectedProject","setSelectedProject","projects","setProjects","useProjectsValue","ProjectsContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,OAAO,MAAMC,sBAAsB,GAAGJ,aAAa,EAA5C;AACP,OAAO,MAAMK,uBAAuB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACnD,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA0CN,QAAQ,CAAC,OAAD,CAAxD;AAEA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAG;AAACO,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QADL,CADJ;AAMH,CATM;AAWP,OAAO,MAAMK,gBAAgB,GAAG,MAAMV,UAAU,CAACW,eAAD,CAAzC","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { useProjects } from '../hooks';\r\n\r\nexport const SelectedProjectContext = createContext();\r\nexport const SelectedProjectProvider = ({children}) => {\r\n    const { selectedProject, setSelectedProject } = useState('INBOX');\r\n\r\n    return (\r\n        <ProjectsContext.Provider value= {{projects, setProjects}}>\r\n            {children}\r\n        </ProjectsContext.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport const useProjectsValue = () => useContext(ProjectsContext); "]},"metadata":{},"sourceType":"module"}