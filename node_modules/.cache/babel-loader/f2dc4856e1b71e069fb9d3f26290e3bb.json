{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caitlin\\\\Documents\\\\GitHub\\\\todoist-project\\\\src\\\\components\\\\Tasks.js\";\nimport React, { useEffect } from 'react';\nimport { Checkbox } from './Checkbox';\nimport { AddTask } from './AddTask';\nimport { useTasks } from '../hooks';\nimport { collatedTasks } from '../constants';\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nexport const Tasks = () => {\n  const {\n    selectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  const {\n    tasks\n  } = useTasks(selectedProject);\n  let projectName = '';\n\n  if (collatedTasksExist(selectedProject) && selectedProject) {\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n  }\n\n  if (projects && projects.length > 0 && selectedProject && !collatedTasksExist(selectedProject)) {\n    projectName = getTitle(projects, selectedProject).name;\n  }\n\n  useEffect(() => {\n    document.title = `${projectName}: Todoist`;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks\",\n    \"data-testid\": \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"project-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, projectName), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tasks__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: `${task.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: task.id,\n    taskDesc: task.task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, task.task)))), /*#__PURE__*/React.createElement(AddTask, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Caitlin/Documents/GitHub/todoist-project/src/components/Tasks.js"],"names":["React","useEffect","Checkbox","AddTask","useTasks","collatedTasks","getTitle","getCollatedTitle","collatedTasksExist","useSelectedProjectValue","useProjectsValue","Tasks","selectedProject","projects","tasks","projectName","name","length","document","title","map","task","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,kBAArC,QAA+D,YAA/D;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,YAA1D;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAsBH,uBAAuB,EAAnD;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeH,gBAAgB,EAArC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYV,QAAQ,CAACQ,eAAD,CAA1B;AAEA,MAAIG,WAAW,GAAG,EAAlB;;AAEA,MAAIP,kBAAkB,CAACI,eAAD,CAAlB,IAAuCA,eAA3C,EAA4D;AAC1DG,IAAAA,WAAW,GAAGR,gBAAgB,CAACF,aAAD,EAAgBO,eAAhB,CAAhB,CAAiDI,IAA/D;AACD;;AAED,MACEH,QAAQ,IACRA,QAAQ,CAACI,MAAT,GAAkB,CADlB,IAEAL,eAFA,IAGA,CAACJ,kBAAkB,CAACI,eAAD,CAJrB,EAKE;AACAG,IAAAA,WAAW,GAAGT,QAAQ,CAACO,QAAD,EAAWD,eAAX,CAAR,CAAoCI,IAAlD;AACD;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACC,KAAT,GAAkB,GAAEJ,WAAY,WAAhC;AACD,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,mBAAY,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,WAAhC,CADF,eAGE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACM,GAAN,CAAUC,IAAI,iBACb;AAAI,IAAA,GAAG,EAAG,GAAEA,IAAI,CAACC,EAAG,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAED,IAAI,CAACC,EAAnB;AAAuB,IAAA,QAAQ,EAAED,IAAI,CAACA,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAI,CAACA,IAAZ,CAFF,CADD,CADH,CAHF,eAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CAxCM","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Checkbox } from './Checkbox';\r\nimport { AddTask } from './AddTask';\r\nimport { useTasks } from '../hooks';\r\nimport { collatedTasks } from '../constants';\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\n\r\nexport const Tasks = () => {\r\n  const { selectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  const { tasks } = useTasks(selectedProject);\r\n\r\n  let projectName = '';\r\n\r\n  if (collatedTasksExist(selectedProject) && selectedProject) {\r\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\r\n  }\r\n\r\n  if (\r\n    projects &&\r\n    projects.length > 0 &&\r\n    selectedProject &&\r\n    !collatedTasksExist(selectedProject)\r\n  ) {\r\n    projectName = getTitle(projects, selectedProject).name;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${projectName}: Todoist`;\r\n  });\r\n\r\n  return (\r\n    <div className=\"tasks\" data-testid=\"tasks\">\r\n      <h2 data-testid=\"project-name\">{projectName}</h2>\r\n\r\n      <ul className=\"tasks__list\">\r\n        {tasks.map(task => (\r\n          <li key={`${task.id}`}>\r\n            <Checkbox id={task.id} taskDesc={task.task} />\r\n            <span>{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <AddTask />\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}